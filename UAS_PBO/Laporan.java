/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UAS_PBO;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author MUHAMMAD PURNAMA
 */
public class Laporan extends javax.swing.JFrame {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1/test";
    static final String USER = "root";
    static final String PASS = "";
    
    static Connection conn;
    static Statement stmt;
    static ResultSet rs; 

    /**
     * Creates new form Laporan
     */
    public Laporan() {
        initComponents();
        showtable();
        update.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Test = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelData = new javax.swing.JTable();
        pbaru = new javax.swing.JButton();
        update = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuTransaksi = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Test.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        Test.setText("PEMESANAN HOTEL");

        tabelData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelData);

        pbaru.setText("CREATE");
        pbaru.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pbaruMouseClicked(evt);
            }
        });
        pbaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbaruActionPerformed(evt);
            }
        });

        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        hapus.setText("DELETE");
        hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hapusMouseClicked(evt);
            }
        });
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        menuTransaksi.setText("Keluar");
        menuTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTransaksiMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuTransaksi);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Test)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pbaru)
                        .addGap(47, 47, 47)
                        .addComponent(update)
                        .addGap(45, 45, 45)
                        .addComponent(hapus)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Test)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pbaru)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(update)
                        .addComponent(hapus)))
                .addContainerGap(156, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataMouseClicked
        // TODO add your handling code here:
        //getData();
    }//GEN-LAST:event_tabelDataMouseClicked

    private void menuTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTransaksiMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_menuTransaksiMouseClicked

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelData.getSelectedRow();
        if (selectedRow != -1) {
        String kode_Kamar = tabelData.getValueAt(selectedRow, 0).toString();  
        try {
            Class.forName(JDBC_DRIVER);
   
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
 
            stmt = conn.createStatement();
            
            String sql = "DELETE FROM uashotel WHERE kode_kamar=?";
            
            PreparedStatement pms = conn.prepareStatement(sql);
            pms.setString(1, kode_Kamar);
            
            pms.execute();
            
            stmt.close();
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        showtable();
        clear(kode_Kamar);
        }       
    }//GEN-LAST:event_hapusActionPerformed

    private void pbaruMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pbaruMouseClicked
        // TODO add your handling code here:
        new Hotel().setVisible(true);
    }//GEN-LAST:event_pbaruMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_hapusMouseClicked

    private void pbaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbaruActionPerformed
        // TODO add your handling code here:
        new Hotel().setVisible(true);
    }//GEN-LAST:event_pbaruActionPerformed

    
    public void showtable(){
        try{
            Class.forName(JDBC_DRIVER);	   
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            String sql = "SELECT * FROM uashotel";
            rs = stmt.executeQuery(sql);
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("Kode Kamar");
            model.addColumn("No Kamar");
            model.addColumn("Nama Pengunjung");
            model.addColumn("Jenis");
            model.addColumn("Harga");
            model.addColumn("Tgl Masuk");
            model.addColumn("Tgl Keluar");
 
            while (rs.next()) {
                // Extract data from the result set
                String kode = rs.getString("kode_kamar");
                int nomor = rs.getInt("no_kamar");
                String nama = rs.getString("nama");
                String jenis = rs.getString("jenis_kamar");
                int harga = rs.getInt("harga");
                Date tglMsk = rs.getDate("tgl_masuk");
                Date tglKlr = rs.getDate("tgl_keluar");

                // Add a new row to the table model
                model.addRow(new Object[]{kode, nomor, nama, jenis, harga, tglMsk, tglKlr});
            }
            rs.close();
            conn.close();
            stmt.close();
            
            tabelData.setModel(model);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void clear(String kode_Kamar) {
    DefaultTableModel model = (DefaultTableModel) tabelData.getModel();
    int rowCount = model.getRowCount();
    for (int i = rowCount - 1; i >= 0; i--) {
        String kode = model.getValueAt(i, 0).toString(); // Mengambil kode kamar pada kolom pertama (indeks 0)
        if (kode.equals(kode_Kamar)) {
            model.removeRow(i); // Menghapus baris dengan kode kamar yang cocok
        }
    }
}
            
    
    
    
    /**
     * @param args the command line arguments
     */    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Test;
    private javax.swing.JButton hapus;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu menuTransaksi;
    private javax.swing.JButton pbaru;
    private javax.swing.JTable tabelData;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

}
